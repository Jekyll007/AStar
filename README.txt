Алгоритм поиска пути "A*".
Реализация на Python.
В файле info.docx имеется подробное описание.


В качестве входных данных имеем изображение, представляющее карту препятствий.
Задача: найти кратчайший путь между двумя точками, указанными на изображении
На выходе получаем траекторию пути и файл команд агенту.

Для реализации поиска пути увеличивается отступ от препятствий на половину ширины/длины агента, на изображение накладывается сетка определённого размера, каждая ячейка которой анализируется на возможность прохождения. После чего строится карта обнаруженных препятствий, которая используется алгоритмом A* для их обхода. По результатам работы A* строится путь между двумя точками. 
Результаты всех операций отображаются графически.

Управление программой:

ЛКМ - стартовая точка, ПКМ - целевая точка.
Для построения пути точки можно ставить только на светлые (проходимые) поля.
m - смена режима программы (поиск пути / рисование карты препятствий).

Опции режима рисования:
	ЛКМ - рисование;
	c - очистка поля для рисования;
	- - уменьшение размера кисти для рисования на 1 px;
	= - увеличение размера кисти для рисования на 1 px (максимум - 50 px);
	w - установка белого цвета кисти;
	b - установка черного цвета кисти;
	t - выбор дерева для отрисовки
	s - выбор камня для отрисовки
	n - наложение шума типа "соль, перец"

Tab – команды двигателям.
Space – команды агенту.
Esc - завершение программы.

В верхней части окна можно изменять параметры анализа изображения.
Grid: регулирует размер сетки в px (5 ~ 50). 
Object: размер объекта в px (0 ~ 50).
Thresh: порог для анализа препятствий ("средний" цвет ячейки сетки, 0 ~ 255).

В качестве карты по умолчанию используется изображение "maze.png". Если оно отсутствует, создаётся изображение белого цвета размером 800 х 400 px.

